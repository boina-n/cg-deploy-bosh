---
meta:
  bosh_static_ip: (( grab terraform_outputs.master_bosh_static_ip ))
  keypair_file: ./decrypt/master-bosh.pem
  passwords:
    nats: (( param "specify nats password" ))
    postgres: (( param "specify postgres password" ))
    admin: (( param "specify admin password" ))
    director: (( param "specify director password" ))
    agent: (( param "specify agent password" ))
    hm: (( param "specify hm password" ))
    mbus: (( param "specify mbus password" ))
  aws:
    default_key_name: bosh
  bosh_domain_name: masterbosh

name: master-bosh

releases:
- name: bosh
  url: (( grab $RELEASES_BOSH_URL ))
  sha1: (( grab $RELEASES_BOSH_SHA1 ))
- name: bosh-aws-cpi
  url: (( grab $RELEASES_BOSH_AWS_CPI_URL ))
  sha1: (( grab $RELEASES_BOSH_AWS_CPI_SHA1 ))

resource_pools:
- name: vms
  network: private
  stemcell:
    url: (( grab $STEMCELL_URL ))
    sha1: (( grab $STEMCELL_SHA1 ))
  cloud_properties:
    instance_type: m3.large
    iam_instance_profile: (( grab terraform_outputs.master_bosh_profile ))
    ephemeral_disk:
      size: 25_000
      type: gp2
      encrypted: true
    availability_zone: (( grab terraform_outputs.az1 ))

disk_pools:
- name: bosh-ssd
  disk_size: 20_000
  cloud_properties:
    type: gp2
    encrypted: true

networks:
- name: private
  type: manual
  subnets:
  - range: (( grab terraform_outputs.private_subnet_az1_cidr ))
    gateway: (( grab terraform_outputs.private_subnet_az1_gateway ))
    dns:
    - (( grab terraform_outputs.vpc_cidr_dns ))
    cloud_properties:
      subnet: (( grab terraform_outputs.private_subnet_az1 ))

instance_groups:
- name: bosh
  instances: 1
  resource_pool: vms
  persistent_disk_pool: bosh-ssd

  networks:
  - name: private
    default: [dns, gateway]
    static_ips:
    - (( grab meta.bosh_static_ip ))

  jobs:
  - name: nats
    release: bosh
    properties:
      nats:
        address: 127.0.0.1
        user: nats
        password: (( grab meta.passwords.nats ))

  - name: powerdns
    release: bosh
    properties:
      dns:
        address: (( grab meta.bosh_static_ip ))
        recursor: (( grab terraform_outputs.vpc_cidr_dns ))
        domain_name: (( grab meta.bosh_domain_name ))
        db: (( grab instance_groups.bosh.jobs.postgres.properties.postgres ))

  - name: postgres
    release: bosh
    properties:
      postgres:
        listen_address: 127.0.0.1
        host: 127.0.0.1
        user: postgres
        password: (( grab meta.passwords.postgres ))
        database: bosh
        adapter: postgres

  - name: blobstore
    release: bosh
    properties:
      blobstore:
        address: (( grab meta.bosh_static_ip ))
        port: 25250
        provider: dav
        director:
          user: director
          password: (( grab meta.passwords.director ))
        agent:
          user: agent
          password: (( grab meta.passwords.agent ))

  - name: director
    release: bosh
    properties:
      director:
        address: 127.0.0.1
        name: (( grab meta.name ))
        db: (( grab instance_groups.bosh.jobs.postgres.properties.postgres ))
        cpi_job: aws_cpi
        max_threads: 10
        user_management:
          provider: local
          local:
            users:
            - name: admin
              password: (( grab meta.passwords.admin ))
            - name: hm
              password: (( grab meta.passwords.hm ))
      nats: (( grab instance_groups.bosh.jobs.nats.properties.nats ))
      blobstore: (( grab instance_groups.bosh.jobs.blobstore.properties.blobstore ))
      dns: (( grab instance_groups.bosh.jobs.powerdns.properties.dns ))
      ntp: [time.nist.gov]

  - name: health_monitor
    release: bosh
    properties:
      hm:
        director_account:
          user: hm
          password: (( grab meta.passwords.hm ))
        resurrector_enabled: true
      nats: (( grab instance_groups.bosh.jobs.nats.properties.nats ))
      director:
        address: 127.0.0.1

  - name: registry
    release: bosh
    properties:
      registry:
        address: (( grab meta.bosh_static_ip ))
        host: (( grab meta.bosh_static_ip ))
        db: (( grab instance_groups.bosh.jobs.postgres.properties.postgres ))
        http:
          user: admin
          password: (( grab meta.passwords.admin ))
          port: 25777
        username: admin
        password: (( grab meta.passwords.admin ))
        port: 25777
        cloud:
          plugin: aws
          credentials_source: static
          access_key_id: (( grab terraform_outputs.master_bosh_access_key_id_curr ))
          secret_access_key: (( grab terraform_outputs.master_bosh_secret_access_key_curr ))
          region: (( grab terraform_outputs.vpc_region ))

  - name: aws_cpi
    release: bosh-aws-cpi
    properties:
      aws:
        credentials_source: static
        default_key_name: (( grab meta.aws.default_key_name ))
        default_security_groups:
        - (( grab terraform_outputs.bosh_security_group ))
        access_key_id: (( grab terraform_outputs.master_bosh_access_key_id_curr ))
        secret_access_key: (( grab terraform_outputs.master_bosh_secret_access_key_curr ))
        region: (( grab terraform_outputs.vpc_region ))
      registry:
        username: admin
        password: (( grab meta.passwords.admin ))
        host: (( grab meta.bosh_static_ip ))
      nats: (( grab instance_groups.bosh.jobs.nats.properties.nats ))
      blobstore: (( grab instance_groups.bosh.jobs.blobstore.properties.blobstore ))

cloud_provider:
  template: {name: aws_cpi, release: bosh-aws-cpi}

  ssh_tunnel:
    host: (( grab meta.bosh_static_ip ))
    port: 22
    user: vcap
    private_key: (( grab meta.keypair_file ))

  mbus: (( concat "https://mbus:" meta.passwords.mbus "@" meta.bosh_static_ip ":6868" ))

  properties:
    aws: (( grab instance_groups.bosh.jobs.aws_cpi.properties.aws ))
    agent:
      mbus: (( concat "https://mbus:" meta.passwords.mbus "@0.0.0.0:6868" ))
    blobstore: {provider: local, path: /var/vcap/micro_bosh/data/cache}
    ntp: (( grab instance_groups.bosh.jobs.director.properties.ntp ))
