networks:
- name: default
  type: dynamic
  subnets:
  - az: z1
    range: (( grab terraform_outputs.private_subnet_cidr_az1 ))
    gateway: (( grab terraform_outputs.private_subnet_gateway_az1 ))
    reserved:
    - (( grab terraform_outputs.private_subnet_reserved_az1 ))
    - (( grab terraform_outputs.bosh_static_ip ))
    dns:
    - (( grab terraform_outputs.vpc_cidr_dns ))
    cloud_properties:
      subnet: (( grab terraform_outputs.private_subnet_az1 ))
      security_groups:
      - (( grab terraform_outputs.bosh_security_group ))
  - az: z2
    range: (( grab terraform_outputs.private_subnet_cidr_az2 ))
    gateway: (( grab terraform_outputs.private_subnet_gateway_az2 ))
    reserved:
    - (( grab terraform_outputs.private_subnet_reserved_az2 ))
    - (( grab terraform_outputs.bosh_static_ip ))
    dns:
    - (( grab terraform_outputs.vpc_cidr_dns ))
    cloud_properties:
      subnet: (( grab terraform_outputs.private_subnet_az2 ))
      security_groups:
      - (( grab terraform_outputs.bosh_security_group ))
- name: concourse
  type: manual
  subnets:
  - range: (( grab terraform_outputs.concourse_subnet_cidr ))
    gateway: (( grab terraform_outputs.concourse_subnet_gateway ))
    reserved:
    - (( grab terraform_outputs.concourse_subnet_reserved ))
    az: z2
    dns:
    - (( grab terraform_outputs.vpc_cidr_dns ))
    cloud_properties:
      subnet: (( grab terraform_outputs.concourse_subnet ))
      security_groups:
      - (( grab terraform_outputs.bosh_security_group ))
      - (( grab terraform_outputs.concourse_security_group ))
- name: logsearch
  type: manual
  subnets:
  - az: z1
    range: (( grab terraform_outputs.services_subnet_cidr_az1 ))
    gateway: (( grab terraform_outputs.services_subnet_gateway_az1 ))
    reserved:
    - (( grab terraform_outputs.services_subnet_reserved_az1 ))
    static: (( grab terraform_outputs.logsearch_static_ips ))
    dns:
    - (( grab terraform_outputs.vpc_cidr_dns ))
    cloud_properties:
      subnet: (( grab terraform_outputs.services_subnet_az1 ))
      security_groups:
      - (( grab terraform_outputs.bosh_security_group ))
- name: kubernetes-aws
  type: manual
  subnets:
  - az: z1
    range: (( grab terraform_outputs.services_subnet_cidr_az1 ))
    gateway: (( grab terraform_outputs.services_subnet_gateway_az1 ))
    reserved:
    - (( grab terraform_outputs.services_subnet_reserved_az1 ))
    static: (( grab terraform_outputs.kubernetes_static_ips ))
    dns:
    - (( grab terraform_outputs.vpc_cidr_dns ))
    cloud_properties:
      subnet: (( grab terraform_outputs.services_subnet_az1 ))
      security_groups:
      - (( grab terraform_outputs.bosh_security_group ))

vm_types:
- name: admin-ui
  cloud_properties:
    instance_type: t2.medium
    ephemeral_disk:
      type: gp2
      size: 10240
      encrypted: true
- name: shibboleth
  cloud_properties:
    instance_type: m3.medium
    ephemeral_disk:
      type: gp2
      size: 10240
      encrypted: true
- name: concourse-web
  cloud_properties:
    instance_type: t2.medium
    ephemeral_disk:
      type: gp2
      size: 45000
      encrypted: true
- name: concourse-worker
  cloud_properties:
    instance_type: m3.xlarge
    ephemeral_disk:
      type: gp2
      size: 300000
      encrypted: true
- name: logsearch_es_master
  cloud_properties:
    instance_type: t2.xlarge
- name: logsearch_es_data
  cloud_properties:
    instance_type: m3.xlarge
- name: logsearch_queue
  cloud_properties:
    instance_type: t2.2xlarge
- name: logsearch_ingestor
  cloud_properties:
    instance_type: t2.medium
- name: logsearch_parser
  cloud_properties:
    instance_type: c4.xlarge
- name: logsearch_kibana
  cloud_properties:
    instance_type: t2.medium
- name: logsearch_maintenance
  cloud_properties:
    instance_type: t2.medium
- name: logsearch_cluster_monitor
  cloud_properties:
    instance_type: m3.xlarge
- name: logsearch_haproxy
  cloud_properties:
    instance_type: t2.medium
- name: logsearch_errand
  cloud_properties:
    instance_type: t2.medium
- name: kubernetes_compilation
  cloud_properties:
    instance_type: m3.large
- name: kubernetes_default
  cloud_properties:
    instance_type: m3.large
- name: kubernetes_etcd
  cloud_properties:
    instance_type: t2.small
- name: kubernetes_master
  cloud_properties:
    instance_type: m3.large
- name: kubernetes_minion
  cloud_properties:
    instance_type: m3.large
- name: kubernetes_errand
  cloud_properties:
    instance_type: m3.large

disk_types:
- name: admin-ui
  disk_size: 5120
  cloud_properties:
    type: gp2
    encrypted: true
- name: shibboleth
  disk_size: 4096
  cloud_properties:
    type: gp2
    encrypted: true
- name: logsearch_es_master
  disk_size: 102400
  cloud_properties:
    type: gp2
    encrypted: true
- name: logsearch_es_data
  disk_size: 1500000
  cloud_properties:
    type: gp2
    encrypted: true
- name: logsearch_queue
  disk_size: 102400
  cloud_properties:
    type: gp2
    encrypted: true
- name: logsearch_cluster_monitor
  disk_size: 102400
  cloud_properties:
    type: gp2
    encrypted: true
- name: kubernetes
  disk_size: 15000
  cloud_properties:
    type: gp2
    encrypted: true

vm_extensions:
- name: concourse-lb
  cloud_properties:
    elbs:
    - (( grab terraform_outputs.concourse_elb_name ))
- name: shibboleth-lb
  cloud_properties:
    elbs:
    - (( grab terraform_outputs.shibboleth_elb_name ))
- name: logsearch-errand-profile
  cloud_properties:
    iam_instance_profile: (( grab terraform_outputs.bosh_compilation_profile ))
- name: logsearch-ingestor-profile
  cloud_properties:
    iam_instance_profile: (( grab terraform_outputs.logsearch_ingestor_profile ))
- name: kubernetes-etcd-profile
  cloud_properites:
    iam_instance_profile: (( grab terraform_outputs.kubernetes_etcd_profile ))
- name: kubernetes-master-profile
  cloud_properties:
    iam_instance_profile: (( grab terraform_outputs.kubernetes_master_profile ))
- name: kubernetes-minion-profile
  cloud_properties:
    iam_instance_profile: (( grab terraform_outputs.kubernetes_minion_profile ))

compilation:
  network: default